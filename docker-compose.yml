version: '3.8'

services:

  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    restart: always
    environment:
      CONTAINERS: 1
      SERVICES: 1
      TASKS: 1
      NETWORKS: 1
      NODES: 1
      METADATA: 1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik_proxy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:2375/_ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  traefik:
    image: traefik:v2.11
    container_name: traefik
    restart: unless-stopped
    depends_on:
      - socket-proxy
    command:
      - "--api.dashboard=false"
      - "--api.insecure=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=tcp://socket-proxy:2375"
      - "--providers.docker.network=traefik_proxy"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--certificatesResolvers.myresolver.acme.email=alerte@opicluster.online"
      - "--certificatesResolvers.myresolver.acme.storage=/acme/acme.json"
      - "--certificatesResolvers.myresolver.acme.tlsChallenge=true"
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--accesslog.filepath=/logs/access.log"
      - "--global.sendAnonymousUsage=false"
      - "--experimental.localPlugins.geoblock.moduleName=github.com/PascalMinder/geoblock"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./traefik/acme:/acme
      - ./traefik/logs:/logs
      - ./traefik/secrets:/secrets:ro
      - ./traefik/traefik_dynamic.yml:/etc/traefik/dynamic/traefik_dynamic.yml
      - /plugins-local/src/github.com/PascalMinder/GeoBlock:/plugins-local/src/github.com/PascalMinder/geoblock
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.monitoring.opicluster.online`)"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.entryPoints=websecure"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik-dashboard.middlewares=traefik-auth@file"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80/ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  web_app:
    build: ./web_app
    container_name: web_app
    security_opt:
      - no-new-privileges:true
      - seccomp=unconfined
    cap_drop:
      - ALL
    read_only: true
    tmpfs:
      - /tmp
    env_file:
      - .env.secrets
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_proxy"

      # HTTP -> redirect HTTPS
      - "traefik.http.routers.web_app_http.rule=Host(`monitoring.opicluster.online`) && PathPrefix(`/`)"
      - "traefik.http.routers.web_app_http.entryPoints=web"
      - "traefik.http.routers.web_app_http.middlewares=redirect-to-https"
      - "traefik.http.routers.web_app_http.service=web_app_main"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      # HTTPS - Main app
      - "traefik.http.routers.web_app_https.rule=Host(`monitoring.opicluster.online`)"
      - "traefik.http.routers.web_app_https.entryPoints=websecure"
      - "traefik.http.routers.web_app_https.tls=true"
      - "traefik.http.routers.web_app_https.tls.certresolver=myresolver"
      - "traefik.http.routers.web_app_https.middlewares=error-pages@file,geoblock-france@file,traefik-auth@file"
      - "traefik.http.routers.web_app_https.service=web_app_main"
      - "traefik.http.services.web_app_main.loadbalancer.server.port=5000"

      # Static files (bypass middlewares)
      - "traefik.http.routers.web_app_static.rule=Host(`monitoring.opicluster.online`) && PathPrefix(`/static/`)"
      - "traefik.http.routers.web_app_static.entryPoints=websecure"
      - "traefik.http.routers.web_app_static.tls=true"
      - "traefik.http.routers.web_app_static.tls.certresolver=myresolver"
      - "traefik.http.routers.web_app_static.service=web_app_main"

      # API - SMS Alert
      - "traefik.http.routers.sms_alert_api.rule=Host(`monitoring.opicluster.online`) && PathPrefix(`/sms_alert`)"
      - "traefik.http.routers.sms_alert_api.entryPoints=websecure"
      - "traefik.http.routers.sms_alert_api.tls=true"
      - "traefik.http.routers.sms_alert_api.tls.certresolver=myresolver"
      - "traefik.http.routers.sms_alert_api.middlewares=geoblock-only@file"
      - "traefik.http.routers.sms_alert_api.priority=100"
      - "traefik.http.routers.sms_alert_api.service=sms_alert_service"
      - "traefik.http.services.sms_alert_service.loadbalancer.server.port=5000"

      # API - Bot Status
      - "traefik.http.routers.bot_status_api.rule=Host(`monitoring.opicluster.online`) && PathPrefix(`/api/bot/status`)"
      - "traefik.http.routers.bot_status_api.entryPoints=websecure"
      - "traefik.http.routers.bot_status_api.tls=true"
      - "traefik.http.routers.bot_status_api.tls.certresolver=myresolver"
      - "traefik.http.routers.bot_status_api.middlewares=geoblock-only@file"
      - "traefik.http.routers.bot_status_api.priority=102"
      - "traefik.http.routers.bot_status_api.service=web_app_main"

      # API - Bot IP Threats
      - "traefik.http.routers.bot_ipthreats_api.rule=Host(`monitoring.opicluster.online`) && PathPrefix(`/api/bot/ip_threats`)"
      - "traefik.http.routers.bot_ipthreats_api.entryPoints=websecure"
      - "traefik.http.routers.bot_ipthreats_api.tls=true"
      - "traefik.http.routers.bot_ipthreats_api.tls.certresolver=myresolver"
      - "traefik.http.routers.bot_ipthreats_api.middlewares=geoblock-only@file"
      - "traefik.http.routers.bot_ipthreats_api.priority=103"
      - "traefik.http.routers.bot_ipthreats_api.service=web_app_main"

    volumes:
      - ./data:/home/foxink/opicluster_monitoring/data
      - ./data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 5s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.monitoring.opicluster.online`)"
      - "traefik.http.routers.prometheus.entryPoints=websecure"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.tls.certresolver=myresolver"
      - "traefik.http.routers.prometheus.middlewares=geoblock-france@file,traefik-auth@file"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/ready"]
      interval: 30s
      timeout: 5s
      retries: 3

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alertmanager.rule=Host(`alertmanager.monitoring.opicluster.online`)"
      - "traefik.http.routers.alertmanager.entryPoints=websecure"
      - "traefik.http.routers.alertmanager.tls=true"
      - "traefik.http.routers.alertmanager.tls.certresolver=myresolver"
      - "traefik.http.routers.alertmanager.middlewares=geoblock-france@file,traefik-auth@file"
      - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9093/-/ready"]
      interval: 30s
      timeout: 5s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    env_file:
      - .env.secrets
    environment:
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
    volumes:
      - ./grafana-data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.monitoring.opicluster.online`)"
      - "traefik.http.routers.grafana.entryPoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.routers.grafana.middlewares=geoblock-france@file,traefik-auth@file"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  discord_bot:
    build: ./discord_bot
    container_name: discord_bot
    env_file:
      - .env.bot
    restart: unless-stopped
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=false"
    read_only: true
    tmpfs:
      - /tmp
    security_opt:
      - no-new-privileges:true
      - seccomp=unconfined
    cap_drop:
      - ALL
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f bot.py || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
  ip_defender:
    build: ./ip_defender
    container_name: ip_defender
    labels:
      - "traefik.enable=false"
    volumes:
      - ./traefik/logs:/logs:ro
      - ./data:/data
    restart: unless-stopped

networks:
  traefik_proxy:
    name: traefik_proxy
    external: false
